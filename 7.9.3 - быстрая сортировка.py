'''Ваша задача реализовать алгоритм быстрой сортировки в python. Нужно будет создать функцию quick_sort,
которая будет принимать исходный список натуральных чисел и возвращать новый отсортированный в порядке неубывания список.

Необходимо написать только определение функций quick_sort, при этом нельзя пользоваться встроенными сортировками в Python'''

def quick_sort(arr):
    # Если массив пустой или содержит один элемент, он уже отсортирован
    if len(arr) <= 1:
        return arr
    # Выбираем опорный элемент, здесь выбираем последний элемент массива
    pivot = arr[-1]
    left = []  # Массив для элементов меньше опорного
    right = []  # Массив для элементов больше или равного опорному
    # Проходим по всем элементам, кроме опорного
    for element in arr[:-1]:
        if element < pivot:
            left.append(element)  # Добавляем в массив слева
        else:
            right.append(element)  # Добавляем в массив справа
    # Рекурсивно применяем quick_sort к левому и правому массивам, затем объединяем
    return quick_sort(left) + [pivot] + quick_sort(right)

#Пример использования

unsorted_list = [3, 6, 8, 10, 1, 2, 1]

sorted_list = quick_sort(unsorted_list)

print(sorted_list)  # Вывод: [1, 1, 2, 3, 6, 8, 10]
