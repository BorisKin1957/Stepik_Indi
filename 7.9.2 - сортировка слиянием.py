'''сть несколько типов сортировки, которые используют рекурсию. Одна из них называется сортировка слиянием

Ваша задача реализовать этот алгоритм. Для этого нужно будет создать функцию merge_sort, которая будет принимать исходный список и возвращать новый отсортированный в порядке неубывания список.

Также для реализации функции merge_sort вам понадобится реализовать функцию merge_two_list. Функция merge_two_list должна принимать два отсортиванных по неубыванию списка, сливать их в один большой список также отсортированный по неубыванию (задача Слияние списков ) и возвращать его.

Ваша задача написать только определение функций merge_sort и merge_two_list, при этом нельзя пользоваться встроенными сортировками в Python

Sample Input:

7
6 2 19 5 10 7 11

Sample Output:

2 5 6 7 10 11 19

'''

# функция merge_two_list должна объединить два отсортированных списка
def merge_two_list(a: list, b: list) -> list:
    '''слияние двух списков'''
    res = []
    while a and b:
        if a[0] <= b[0]:
            res.append(a[0])
            a = a[1:]
        else:
            res.append(b[0])
            b = b[1:]
    else:
        if a:
            res.extend(a)
        else:
            res.extend(b)
        return res


def merge_sort(s: list) -> list:
    '''сортировка списка'''
    if len(s) == 1:
        return s
    half = len(s) // 2
    L1 = merge_sort(s[:half])
    L2 = merge_sort(s[half:])
    return merge_two_list(L1, L2)

L = [2, 6, 19, 25, 30, 1, 3, 8, 18, 19, 31, 50]

print(merge_sort(L))